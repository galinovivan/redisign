



.align(@align: center) {
  text-align: @align;
}



.navToggle(@width: @navToggleWidth,@background: @navToggleBackground ) {
  span {
    display: block;
    width: @width;
    background: @navToggleBackground;
    height: @navToggleHeight;
    &:not(:last-child) {
      margin-bottom: @navToggleMarginBottom;
    }
    &:nth-child(2) {
      position: relative;
      &::after {
        content: '';
        display: block;
        background: @navToggleBackground;
        position: relative;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        .transition();
      }
    }
    .transition();
  }
  &.close {
    span {
      &:first-child {
        display: none;
      }
      &:nth-child(2) {
        .transform(rotate(-45deg));
        &::after {
          .transform(rotate(90deg));
        }
      }
      &:last-child {
        display: none;

      }
    }
  }
}

.makeGrid(@index) {
  width: 100% / (12 / @index);
}

.makeOffset(@index) {
  margin-left: 100% / (12 / @index);
}

.clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

.margin_align() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.clear_browser_style() {
  -webkit-appearance: none;
}

.placeholder_style(@color: @inputFontColor, @size: @inputFontSize) {
  &::-webkit-input-placeholder {
    color: @color;
    font-size: @size;
  }
}
.moz_placeholder_style(@color: @inputFontColor, @size: @inputFontSize) {
  &::-moz-placeholder {
    color: @color;
    font-size: @size;
  }
  &:-moz-placeholder {
    color: @color;
    font-size: @size;
  }
}

.flex_align(@space: space-between) {
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  justify-content: @space;
  align-items: center;
}


//css3

.transition(@prop: all, @duration: 0.2s) {
  transition: @prop @duration;
  -webkit-transition: @prop @duration;
  -moz-transition: @prop @duration;
  -o-transition: @prop @duration;
}

.border_radius(@radius) {
  border-radius: @radius;
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
}

.transform(@prop) {
  transform: @prop;
  -webkit-transform: @prop;
  -moz-transform: @prop;
  -o-transform: @prop;
  -ms-transform: @prop;
}
.transformMore(@prop1, @prop2) {
  transform: @prop1, @prop2;
  -webkit-transform: @prop1, @prop2;
  -moz-transform: @prop1, @prop2;
  -o-transform: @prop1, @prop2;
  -ms-transform: @prop1, @prop2;
}

.shadow(@prop: @baseShadow) {
  box-shadow: @prop;
  -webkit-box-shadow: @prop;
  -moz-box-shadow: @prop;
  -o-box-shadow: @prop;
}

.filter(@prop) {
  filter: @prop;
  -moz-filter: @prop;
  -webkit-filter: @prop;
}

// hovers

.filter_hover(@filter: brightness(@baseBrightnessHover)) {
  .transition();
  &:hover {
    .filter(@filter);
  }
}

.link_hover(@color: @baseColor) {
  .transition();
  &:hover {
    color: @color;
  }
}

.shadow_hover(@shadow: @hoverShadow) {
  .transition(all, @baseTransitionDurations);
    &:hover {
      .shadow(@shadow);
    }
}

.transparent_button_hover() {
  .filling_hover();
}

.filling_hover(@background: @baseColor, @color: @white) {
.transition(all, @baseTransitionDurations);
  &:hover {
    background: @background;
    color: @color;
  }
}

.base_button_hovers() {
  .transused_background_hover();
}
.red_button_hover() {
  .transused_background_hover(@altBaseColor);
}

.triangle_right_decor(@borderColor: @baseColor, @weight: @triangleWeight) {
  position: relative;
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    border: @weight solid @transparent;
    border-right: @weight solid @borderColor;
  }
}
.triangle_hover() {
  position: relative;
    &::after {
      position: absolute;
      left: 100%;
      top: 36%;
      content: '';
      opacity: 0;
      .transition();
      .triangle_right();
  }
  &:hover {
    &::after {
      opacity: 1;
    }
  }
}
.triangle_right() {
  border: @triangleWeight solid @transparent;
  border-left: (@triangleWeight + 3) solid @baseColor;
}
.transused_background_hover(@color: @baseColor, @duration: @baseTransitionDurations) {
  .transition(all, @duration);
  &:hover {
    background: darken(@color, @darkPersentForTransusedHover);
  }
}